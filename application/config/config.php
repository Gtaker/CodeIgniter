<?php
defined('BASEPATH') OR exit('No direct script access allowed');

/*
|--------------------------------------------------------------------------
| Base Site URL
| 基础URL
|--------------------------------------------------------------------------
|
| URL to your CodeIgniter root. Typically this will be your base URL,
| WITH a trailing slash:
|
|	http://example.com/
|
| WARNING: You MUST set this value!
|
| If it is not set, then CodeIgniter will try guess the protocol and path
| your installation, but due to security concerns the hostname will be set
| to $_SERVER['SERVER_ADDR'] if available, or localhost otherwise.
| The auto-detection mechanism exists only for convenience during
| development and MUST NOT be used in production!
|
| If you need to allow multiple domains, remember that this file is still
| a PHP script and you can easily do that on your own.
|
| 链接到你的 CodeIgniter 根目录。通常这是一个带有尾部斜杠的基本链接：
|
|	http://example.com/
|
| 警告：你必须设置这个值！
|
| 如果没有设置，CodeIgniter将会尝试猜测协议和安装路径，
| 但是出于对安全的考虑，主机名将会设置 $_SERVER['SERVER_ADDR']（如果可用） 或 localhost。
| 自动检测机制的存在只是为了方便开发，一定不能用于生产环境！
|
| 如果你需要使用多个域名，请记住该文件的本质是一个 PHP 脚本，
| 你可以很轻易的用你自己的方法来达到目的。
|
*/
$config['base_url'] = '';

/*
|--------------------------------------------------------------------------
| Index File
| 引导文件（前端控制器）
|--------------------------------------------------------------------------
|
| Typically this will be your index.php file, unless you've renamed it to
| something else. If you are using mod_rewrite to remove the page set this
| variable so that it is blank.
|
| 通常这将会是你的 index.php 文件，除非你将其重命名为其他的名字。
| 如果你使用了 mod_rewrite (重写模块) 删除了该变量指定的页面，
| 那么它将会是空值。
|
*/
$config['index_page'] = 'index.php';

/*
|--------------------------------------------------------------------------
| URI PROTOCOL
| URI 协议
|--------------------------------------------------------------------------
|
| This item determines which server global should be used to retrieve the
| URI string.  The default setting of 'REQUEST_URI' works for most servers.
| If your links do not seem to work, try one of the other delicious flavors:
|
| 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI']
| 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING']
| 'PATH_INFO'      Uses $_SERVER['PATH_INFO']
|
| WARNING: If you set this to 'PATH_INFO', URIs will always be URL-decoded!
|
| 该选项决定了使用哪个全局服务器变量来取得URI字符串。
| 默认设置 'REQUEST_URI' 适用于大多数服务器。
| 如果你的链接不奏效，那么试一试其他美味的佐料（注：原文：try one of the other delicious flavors）：
|
| 'REQUEST_URI'    Uses $_SERVER['REQUEST_URI']
| 'QUERY_STRING'   Uses $_SERVER['QUERY_STRING']
| 'PATH_INFO'      Uses $_SERVER['PATH_INFO']
|
| 警告：如果该项设置为 'PATH_INFO',URI 将始终被 URL 解码！
|
*/
$config['uri_protocol']	= 'REQUEST_URI';

/*
|--------------------------------------------------------------------------
| URL suffix
| URL 后缀
|--------------------------------------------------------------------------
|
| This option allows you to add a suffix to all URLs generated by CodeIgniter.
| For more information please see the user guide:
|
| 该选项允许给所有 CodeIgniter 生成的 URL 添加一个后缀，
| 更多的信息请查看用户手册：
|
| https://codeigniter.com/user_guide/general/urls.html
|
*/
$config['url_suffix'] = '';

/*
|--------------------------------------------------------------------------
| Default Language
| 默认语言
|--------------------------------------------------------------------------
|
| This determines which set of language files should be used. Make sure
| there is an available translation if you intend to use something other
| than english.
|
| 该选项决定了使用哪种语言文件。
| 如果你打算指定一个english以外的选项，请确保有可用的文件。
| （注：即在 application/language 目录下应有对应的语言包）
|
*/
$config['language']	= 'english';

/*
|--------------------------------------------------------------------------
| Default Character Set
| 默认字符集
|--------------------------------------------------------------------------
|
| This determines which character set is used by default in various methods
| that require a character set to be provided.
|
| 该选项决定了需要提供字符集的各种方法默认使用的字符集。
|
| See http://php.net/htmlspecialchars for a list of supported charsets.
|
| 在 http://php.net/htmlspecialchars 查看支持的字符集列表。
|
*/
$config['charset'] = 'UTF-8';

/*
|--------------------------------------------------------------------------
| Enable/Disable System Hooks
| 使用/禁用 系统钩子
|--------------------------------------------------------------------------
|
| If you would like to use the 'hooks' feature you must enable it by
| setting this variable to TRUE (boolean).  See the user guide for details.
|
| 将该项设置为 TRUE（布尔值）来允许使用'钩子'特性。
| 在用户手册中查看更多细节。
|
*/
$config['enable_hooks'] = FALSE;

/*
|--------------------------------------------------------------------------
| Class Extension Prefix
| 扩展类前缀
|--------------------------------------------------------------------------
|
| This item allows you to set the filename/classname prefix when extending
| native libraries.  For more information please see the user guide:
|
| 该选项允许你设置扩展原生类库时的文件名和类名前缀，
| 更多信息请查看用户手册：
|
| https://codeigniter.com/user_guide/general/core_classes.html
| https://codeigniter.com/user_guide/general/creating_libraries.html
|
*/
$config['subclass_prefix'] = 'MY_';

/*
|--------------------------------------------------------------------------
| Composer auto-loading
| Composer 自动加载
|--------------------------------------------------------------------------
|
| Enabling this setting will tell CodeIgniter to look for a Composer
| package auto-loader script in application/vendor/autoload.php.
|
| 设置该选项将会告诉 CodeIgniter，在 application/vendor/autoload.php
| 中，寻找（使用） Composer 自动加载脚本。
|
|	$config['composer_autoload'] = TRUE;
|
| Or if you have your vendor/ directory located somewhere else, you
| can opt to set a specific path as well:
|
| 或者你的 vendor/ 目录位于其他地方，你也可以设置一个具体的路径：
|
|	$config['composer_autoload'] = '/path/to/vendor/autoload.php';
|
| For more information about Composer, please visit http://getcomposer.org/
|
| 更多关于 Composer 的信息，请访问 http://getcomposer.org/
|
| Note: This will NOT disable or override the CodeIgniter-specific
|	autoloading (application/config/autoload.php)
|
| 提示：这不会禁用或重写 CodeIgniter 特定的自动加载（application/config/autoload.php）
|
*/
$config['composer_autoload'] = FALSE;

/*
|--------------------------------------------------------------------------
| Allowed URL Characters
| 允许的URL字符
|--------------------------------------------------------------------------
|
| This lets you specify which characters are permitted within your URLs.
| When someone tries to submit a URL with disallowed characters they will
| get a warning message.
|
| 这允许你指定 URL 里可以存在的特殊字符。
| 当某人尝试访问一个含有不允许使用字符的 URL，将会显示一个错误信息。
|
| As a security measure you are STRONGLY encouraged to restrict URLs to
| as few characters as possible.  By default only these are allowed: a-z 0-9~%.:_-
|
| 作为一项安全措施，强烈建议你将 URL 限制为尽可能少的字符。
| 默认只允许这些字符： a-z 0-9~%.:_-
|
| Leave blank to allow all characters -- but only if you are insane.
|
| 将其留空以允许所有的字符——除非你疯了。
|
| The configured value is actually a regular expression character group
| and it will be executed as: ! preg_match('/^[<permitted_uri_chars>]+$/i
|
| 配置的值实际上是一个正则表达式字符组，它将被执行为：! preg_match('/^[<permitted_uri_chars>]+$/i
|
| DO NOT CHANGE THIS UNLESS YOU FULLY UNDERSTAND THE REPERCUSSIONS!!
|
| 除非你已完全了解改动会造成的后果，否则不要改变该选项的值！！
|
*/
$config['permitted_uri_chars'] = 'a-z 0-9~%.:_\-';

/*
|--------------------------------------------------------------------------
| Enable Query Strings
| 启用查询字符串
|--------------------------------------------------------------------------
|
| By default CodeIgniter uses search-engine friendly segment based URLs:
| example.com/who/what/where/
|
| 默认的，CodeIgniter 使用对搜索引擎友好的基于'段'的 URL：
| example.com/who/what/where/
|
| You can optionally enable standard query string based URLs:
| example.com?who=me&what=something&where=here
|
| 你可以启用允许基于标准查询字符串的URL：
| example.com?who=me&what=something&where=here
|
| Options are: TRUE or FALSE (boolean)
|
| 设置为：TRUE 或 FALSE（布尔值）
|
| The other items let you set the query string 'words' that will
| invoke your controllers and its functions:
| example.com/index.php?c=controller&m=function
|
| 其他选项允许你设置查询字符串'单词'，来调用你的控制器及其方法:
| example.com/index.php?c=controller&m=function
|
| Please note that some of the helpers won't work as expected when
| this feature is enabled, since CodeIgniter is designed primarily to
| use segment based URLs.
|
| 请注意，启用该特性后，一些辅助函数将无法按预期工作，
| 因为 CodeIgniter 被设计为主要使用基于段的 URL。
|
*/
$config['enable_query_strings'] = FALSE;
$config['controller_trigger'] = 'c';
$config['function_trigger'] = 'm';
$config['directory_trigger'] = 'd';

/*
|--------------------------------------------------------------------------
| Allow $_GET array
| 允许 $_GET 数组
|--------------------------------------------------------------------------
|
| By default CodeIgniter enables access to the $_GET array.  If for some
| reason you would like to disable it, set 'allow_get_array' to FALSE.
|
| 默认的，CodeIgniter 允许使用 $_GET 数组。
| 如果出于某些原因你或许想要禁用它，设置 'allow_get_array' 选项为 FALSE。
|
| WARNING: This feature is DEPRECATED and currently available only
|          for backwards compatibility purposes!
|
| 警告：该特性已被弃用，目前仅用于向后兼容的目的。
|
*/
$config['allow_get_array'] = TRUE;

/*
|--------------------------------------------------------------------------
| Error Logging Threshold
| 错误日志阈值
|--------------------------------------------------------------------------
|
| You can enable error logging by setting a threshold over zero. The
| threshold determines what gets logged. Threshold options are:
|
| 你可以通过设置一个大于0的阈值来启用错误日志。
| 阈值决定了能获取到什么样的日志。阈值选项为：
|
|	0 = Disables logging, Error logging TURNED OFF      禁用日志记录，关闭错误日志记录
|	1 = Error Messages (including PHP errors)           错误信息（包括 PHP 错误）
|	2 = Debug Messages                                  调试信息
|	3 = Informational Messages                          一般信息（注：Informational Messages）
|	4 = All Messages                                    所有信息
|
| You can also pass an array with threshold levels to show individual error types
| 你同样也可以通过一个包含阈值的数组来显示特殊的错误类型
|
| 	array(2) = Debug Messages, without Error Messages
|
| For a live site you'll usually only enable Errors (1) to be logged otherwise
| your log files will fill up very fast.
| 对于一个线上的网站，你通常仅会使用 Error(1) 等级的日志记录，
| 否则你的日志文件将会很快地被填满。
|
*/
$config['log_threshold'] = 4;

/*
|--------------------------------------------------------------------------
| Error Logging Directory Path
| 错误日志目录路径
|--------------------------------------------------------------------------
|
| Leave this BLANK unless you would like to set something other than the default
| application/logs/ directory. Use a full server path with trailing slash.
|
| 将该项留空，除非你想使用默认的 application/logs/ 目录以外的路径。
| 使用结尾带斜线的完整服务器路径。
|
*/
$config['log_path'] = '';

/*
|--------------------------------------------------------------------------
| Log File Extension
| 日志文件扩展名
|--------------------------------------------------------------------------
|
| The default filename extension for log files. The default 'php' allows for
| protecting the log files via basic scripting, when they are to be stored
| under a publicly accessible directory.
|
| 默认的日志文件扩展名。当日志文件储存在可公开访问的目录下时，
| 默认的扩展名'php'允许通过基础脚本来保护它们。
|
| Note: Leaving it blank will default to 'php'.
| 提示：将该项留空将使用默认值'php'。
|
*/
$config['log_file_extension'] = 'txt';

/*
|--------------------------------------------------------------------------
| Log File Permissions
| 日志文件权限
|--------------------------------------------------------------------------
|
| The file system permissions to be applied on newly created log files.
| 文件系统权限将被用于创建新的日志文件。
|
| IMPORTANT: This MUST be an integer (no quotes) and you MUST use octal
|            integer notation (i.e. 0700, 0644, etc.)
| 重要：该选项的值必须是一个整数（没有引号），
|       并且必须使用八进制整数表示法（即 0700，0644，等）
*/
$config['log_file_permissions'] = 0644;

/*
|--------------------------------------------------------------------------
| Date Format for Logs
| 日志的日期格式
|--------------------------------------------------------------------------
|
| Each item that is logged has an associated date. You can use PHP date
| codes to set your own date formatting
|
| 每一个被记录的日志都会有一个关联的日期。
| 你可以使用 PHP 日期代码来设置你自己的日期格式。
|
*/
$config['log_date_format'] = 'Y-m-d H:i:s';

/*
|--------------------------------------------------------------------------
| Error Views Directory Path
| 错误页面的目录路径
|--------------------------------------------------------------------------
|
| Leave this BLANK unless you would like to set something other than the default
| application/views/errors/ directory.  Use a full server path with trailing slash.
|
| 该选项留空，除非你想要设置默认的 application/views/errors/ 目录以外的路径。
| 使用结尾带斜线的完整服务器路径。
|
*/
$config['error_views_path'] = '';

/*
|--------------------------------------------------------------------------
| Cache Directory Path
| 缓存目录路径
|--------------------------------------------------------------------------
|
| Leave this BLANK unless you would like to set something other than the default
| application/cache/ directory.  Use a full server path with trailing slash.
|
| 该选项留空，除非你想要设置默认的 application/cache/ 目录以外的路径。
| 使用结尾带斜线的完整服务器路径。
|
*/
$config['cache_path'] = '';

/*
|--------------------------------------------------------------------------
| Cache Include Query String
| 缓存查询字符串
|--------------------------------------------------------------------------
|
| Whether to take the URL query string into consideration when generating
| output cache files. Valid options are:
| 当缓存输出文件时，是否考虑 URL 查询字符串。有效的设置为：
|
|	FALSE      = Disabled
|	TRUE       = Enabled, take all query parameters into account.
|	             Please be aware that this may result in numerous cache
|	             files generated for the same page over and over again.
|	array('q') = Enabled, but only take into account the specified list
|	             of query parameters.
|
|	FALSE      = 禁止
|   TRUE       = 允许，将所有的查询参数考虑在内。
|                请注意，该选项可能会导致为同一页面重复生成大量的缓存文件。
|
|	array('q') = 允许，但是只会将列表中指定的查询参数考虑在内。
|
*/
$config['cache_query_string'] = FALSE;

/*
|--------------------------------------------------------------------------
| Encryption Key
| 加密密钥
|--------------------------------------------------------------------------
|
| If you use the Encryption class, you must set an encryption key.
| See the user guide for more info.
|
| 如果你是用了加密类（Encryption class），你必须设置一个加密密钥。
| 产看用户手册来获取更多信息。
|
| https://codeigniter.com/user_guide/libraries/encryption.html
|
*/
$config['encryption_key'] = '';

/*
|--------------------------------------------------------------------------
| Session Variables
| 会话（Session）变量
|--------------------------------------------------------------------------
|
| 'sess_driver'
|
|	The storage driver to use: files, database, redis, memcached
|   使用的驱动程序：files, database, redis, memcached
|
| 'sess_cookie_name'
|
|	The session cookie name, must contain only [0-9a-z_-] characters
|   会话的 Cookie 名，必须只包含数字、字母、减号和下划线（[0-9a-z_-]）。
|
| 'sess_expiration'
|
|	The number of SECONDS you want the session to last.
|	Setting to 0 (zero) means expire when the browser is closed.
|   Session 持续的秒数。
|   设置为0时，会在浏览器关闭时失效。
|
| 'sess_save_path'
|
|	The location to save sessions to, driver dependent.
|   储存 Session 的位置，依赖于驱动程序。
|
|	For the 'files' driver, it's a path to a writable directory.
|	WARNING: Only absolute paths are supported!
|   对于 'files' 驱动，意味着一个可写的目录路径。
|   警告：只支持绝对路径！
|
|	For the 'database' driver, it's a table name.
|	Please read up the manual for the format with other session drivers.
|   对于'database'驱动，意味着一个表名。
|   对于其他的 Session 驱动类型的格式，请悦动用户手册。
|
|	IMPORTANT: You are REQUIRED to set a valid save path!
|   重要：你需要设置一个有效的保存路径！
|
| 'sess_match_ip'
|
|	Whether to match the user's IP address when reading the session data.
|   读取 Session 信息的时候，是否匹配用户的 IP 地址。
|
|	WARNING: If you're using the database driver, don't forget to update
|	         your session table's PRIMARY KEY when changing this setting.
|   警告：如果你使用的是数据库驱动，更改此设置的时，
|         不要忘记更新 Session 表的主键（PRIMARY KEY）。
|
| 'sess_time_to_update'
|
|	How many seconds between CI regenerating the session ID.
|   CI 重新生成 Session ID的时间。
|
| 'sess_regenerate_destroy'
|
|	Whether to destroy session data associated with the old session ID
|	when auto-regenerating the session ID. When set to FALSE, the data
|	will be later deleted by the garbage collector.
|   当自动重新生成新 Session ID 时，是否销毁与旧 Session ID 关联的 Session 数据。
|   当设置为 FALSE 时，数据将在一段时间后被垃圾回收。
|
| Other session cookie settings are shared with the rest of the application,
| except for 'cookie_prefix' and 'cookie_httponly', which are ignored here.
| 除 'cookie_prefix' 和 'cookie_httponly' 外，
| 其他的 Session cookie 设置与应用程序的其它部分共享。
|
*/
$config['sess_driver'] = 'files';
$config['sess_cookie_name'] = 'ci_session';
$config['sess_expiration'] = 7200;
$config['sess_save_path'] = NULL;
$config['sess_match_ip'] = FALSE;
$config['sess_time_to_update'] = 300;
$config['sess_regenerate_destroy'] = FALSE;

/*
|--------------------------------------------------------------------------
| Cookie Related Variables
| Cookie 相关变量
|--------------------------------------------------------------------------
|
| 'cookie_prefix'   = Set a cookie name prefix if you need to avoid collisions      设置一个 Cookie 名前缀，如果你需要避免（Cookie 名）冲突的话。
| 'cookie_domain'   = Set to .your-domain.com for site-wide cookies                 设置 Cookie 的有效域名，如：.你的域名.com（.your-domain.com）。
| 'cookie_path'     = Typically will be a forward slash                             通常是一个正斜线。
| 'cookie_secure'   = Cookie will only be set if a secure HTTPS connection exists.  只有在通过 HTTPS 链接时，才会生成 Cookie。
| 'cookie_httponly' = Cookie will only be accessible via HTTP(S) (no javascript)    只可以通过 HTTP(S) 读取 Cookie（禁止 javascript 读取）。
|
| Note: These settings (with the exception of 'cookie_prefix' and
|       'cookie_httponly') will also affect sessions.
| 提示：这些设置（除 'cookie_prefix' 和 'cookie_httponly'外）
|       同样会影响到 Session。
|
*/
$config['cookie_prefix']	= '';
$config['cookie_domain']	= '';
$config['cookie_path']		= '/';
$config['cookie_secure']	= FALSE;
$config['cookie_httponly'] 	= FALSE;

/*
|--------------------------------------------------------------------------
| Standardize newlines
| 标准化换行符
|--------------------------------------------------------------------------
|
| Determines whether to standardize newline characters in input data,
| meaning to replace \r\n, \r, \n occurrences with the PHP_EOL value.
| 设置是否标准化输入数据中的换行符，
| 也就是将 \r\n，\r，\n ，替换为 PHP_EOL 的值。
|
| WARNING: This feature is DEPRECATED and currently available only
|          for backwards compatibility purposes!
| 警告：该特性已被弃用，当前仅用于向后兼容
|
*/
$config['standardize_newlines'] = FALSE;

/*
|--------------------------------------------------------------------------
| Global XSS Filtering
| XSS 全局过滤
|--------------------------------------------------------------------------
|
| Determines whether the XSS filter is always active when GET, POST or
| COOKIE data is encountered
| 设置在使用 GET、POST、COOKIE 数据时，是否总是进行 XSS 过滤。
|
| WARNING: This feature is DEPRECATED and currently available only
|          for backwards compatibility purposes!
| 警告：该特性已被弃用，当前仅用于向后兼容。
|
*/
$config['global_xss_filtering'] = FALSE;

/*
|--------------------------------------------------------------------------
| Cross Site Request Forgery
| 伪造跨站点请求
|--------------------------------------------------------------------------
| Enables a CSRF cookie token to be set. When set to TRUE, token will be
| checked on a submitted form. If you are accepting user data, it is strongly
| recommended CSRF protection be enabled.
| 设置并启用 CSRF（跨站点请求伪造） Cookie 令牌。
| 当设置为 TRUE 时，将会检查令牌来源。
| 如果你接受用户数据，强烈推荐开启 CSRF 保护。
|
| 'csrf_token_name' = The token name    令牌名
| 'csrf_cookie_name' = The cookie name  Cookie名
| 'csrf_expire' = The number in seconds the token should expire.    令牌的过期秒数。
| 'csrf_regenerate' = Regenerate token on every submission          每次请求后重置令牌。
| 'csrf_exclude_uris' = Array of URIs which ignore CSRF checks      忽略 CSRF 检查的 URI 数组。
*/
$config['csrf_protection'] = FALSE;
$config['csrf_token_name'] = 'csrf_test_name';
$config['csrf_cookie_name'] = 'csrf_cookie_name';
$config['csrf_expire'] = 7200;
$config['csrf_regenerate'] = TRUE;
$config['csrf_exclude_uris'] = array();

/*
|--------------------------------------------------------------------------
| Output Compression
| 压缩输出
|--------------------------------------------------------------------------
|
| Enables Gzip output compression for faster page loads.  When enabled,
| the output class will test whether your server supports Gzip.
| Even if it does, however, not all browsers support compression
| so enable only if you are reasonably sure your visitors can handle it.
| 使用 Gzip 压缩输出以获得更快的页面加载速度。
| 当使用该功能时，不论你的服务器是否支持，输出类都会尝试使用 Gzip。
| 但是，即使这么做，并不是所有的浏览器都支持使用压缩，
| 所以，只应在你确信你的访问者可以处理它的时候启用该选项。
|
| Only used if zlib.output_compression is turned off in your php.ini.
| Please do not use it together with httpd-level output compression.
| 只有在 php.ini 文件中的 zlib.output_compression 选项关闭时，才能使用该功能。
| 请不要和 httpd-level 输出压缩同时使用。
|
| VERY IMPORTANT:  If you are getting a blank page when compression is enabled it
| means you are prematurely outputting something to your browser. It could
| even be a line of whitespace at the end of one of your scripts.  For
| compression to work, nothing can be sent before the output buffer is called
| by the output class.  Do not 'echo' any values with compression enabled.
| 非常重要：如果启用压缩后获得的是一个空白的页面，
| 则意味着你过早地将某些内容输出到了浏览器中。或许只是你脚本末尾的一个空行。
| 执行压缩时，在输出缓冲区被输出类调用前，不能发送任何任何东西。
| 当启用压缩时，不要使用 'echo' 输出任何值。
|
*/
$config['compress_output'] = FALSE;

/*
|--------------------------------------------------------------------------
| Master Time Reference
| 主时间参考
|--------------------------------------------------------------------------
|
| Options are 'local' or any PHP supported timezone. This preference tells
| the system whether to use your server's local time as the master 'now'
| reference, or convert it to the configured one timezone. See the 'date
| helper' page of the user guide for information regarding date handling.
| 设置为 'local' 或任何 PHP 支持的时区。
| 该选项优先告诉系统是否使用服务器的本地的时间来做为当前时间的引用。
| 或者将其改变为一个配置的时区。
| 查看用户手册的 'date helper' 页面来获取关于日期操作的信息。
|
*/
$config['time_reference'] = 'local';

/*
|--------------------------------------------------------------------------
| Rewrite PHP Short Tags
| 重写 PHP 短标记
|--------------------------------------------------------------------------
|
| If your PHP installation does not have short tag support enabled CI
| can rewrite the tags on-the-fly, enabling you to utilize that syntax
| in your view files.  Options are TRUE or FALSE (boolean)
| 如果你的 PHP 安装的时候没有允许使用短标记，CI可以在运行中重写标记。
| 允许你在视图文件中使用这种语法。设置为 TRUE 或 FALSE（布尔值）
|
| Note: You need to have eval() enabled for this to work.
| 提示：使用该功能需要允许使用 eval() 函数。
|
*/
$config['rewrite_short_tags'] = FALSE;

/*
|--------------------------------------------------------------------------
| Reverse Proxy IPs
| 反向 IP 代理
|--------------------------------------------------------------------------
|
| If your server is behind a reverse proxy, you must whitelist the proxy
| IP addresses from which CodeIgniter should trust headers such as
| HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP in order to properly identify
| the visitor's IP address.
|
| 如果你的服务器支持反向代理，那么你必须将代理 IP 地址写入白名单，
| 其中 CodeIgniter 应当信任 HTTP_X_FORWARDED_FOR 和 HTTP_CLIENT_IP 等 HTTP 头，
| 以正确地识别访问者的 IP 地址。
|
| You can use both an array or a comma-separated list of proxy addresses,
| as well as specifying whole subnets. Here are a few examples:
| 你可以使用数组或以逗号分隔的列表来表示代理地址，
| 并指定子网掩码。以下为一个简单的例子：
|
| Comma-separated:	'10.0.1.200,192.168.5.0/24'             逗号分隔：
| Array:		array('10.0.1.200', '192.168.5.0/24')       数组：
*/
$config['proxy_ips'] = '';
